{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["usrName","prompt","document","getElementById","innerHTML","alert","console","log","Folder","props","useState","isOpen","setIsOpen","name","children","direction","className","onClick","style","marginLeft","File","fileExtension","split","mp4","jpeg","png","app","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"2LAGIA,G,MAAUC,OAAO,uBAIdD,EACHE,SAASC,eAAe,eAAeC,UAAvC,sBACQJ,EADR,kCAGWA,IACXE,SAASC,eAAe,eAAeC,UAAvC,sBARY,mBAQZ,kCAGAC,MAAM,gEAKVC,QAAQC,IAAI,yCAEZ,IAAMC,EAAS,SAACC,GAAW,IAAD,EAEMC,oBAAS,GAFf,mBAEhBC,EAFgB,KAERC,EAFQ,KAGhBC,EAAmBJ,EAAnBI,KAAMC,EAAaL,EAAbK,SACRC,EAAYJ,EAAS,OAAS,QAIpC,OAAO,sBAAKK,UAAU,YAAf,UACL,uBAAMC,QAHY,kBAAML,GAAWD,IAGnC,UACE,mBAAGK,UAAU,qBACb,mBAAGA,UAAS,gBAAWD,EAAX,cAEbF,EACC,qBAAKK,MAAO,CAAEC,WAAY,QAA1B,SACGR,EAAUG,EAAW,WAKxBM,EAAO,SAACX,GAAW,IACfI,EAASJ,EAATI,KACFQ,EAAgBR,EAAKS,MAAM,KAAK,GAQtC,OAAO,gCACL,mBAAGN,UAAS,UARI,CAChBO,IAAK,aACLC,KAAM,aACNC,IAAK,qBACLC,IAAK,YAIsBL,GAAf,WACXR,MAiCUc,MA7Bf,WACE,OACE,gCACE,eAAC,EAAD,CAAQd,KAAK,UAAb,UACE,eAAC,EAAD,CAAQA,KAAK,QAAb,UACE,cAAC,EAAD,CAAMA,KAAK,mBACX,cAAC,EAAD,CAAMA,KAAM,yBACZ,cAAC,EAAD,CAAMA,KAAM,mCAEd,eAAC,EAAD,CAAQA,KAAK,SAAb,UACE,cAAC,EAAD,CAAMA,KAAK,sBACX,cAAC,EAAD,CAAMA,KAAK,qBAIf,eAAC,EAAD,CAAQA,KAAK,eAAb,UACE,cAAC,EAAD,CAAMA,KAAK,eACX,cAAC,EAAD,CAAMA,KAAK,kBACX,cAAC,EAAD,CAAMA,KAAK,iBACX,cAAC,EAAD,CAAMA,KAAK,kBACT,cAAC,EAAD,CAAQA,KAAK,kBAAb,SACE,cAAC,EAAD,CAAMA,KAAK,kBAAX,yBCnEGe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFrC,SAASC,eAAe,SAM1ByB,M","file":"static/js/main.aba916a4.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './styles/style.css';\n\nlet usrName = prompt(\"What is your name?\");\nconst defName = \"#1 Fan of Callum\";\n\nfunction sayGreeting() {\n  if ( usrName ) {\n    document.getElementById(\"usrNameView\").innerHTML = `\n      <h1>${usrName}'s File Tree Viewer</h1>\n    `\n  } else if ( !usrName ) {\n    document.getElementById(\"usrNameView\").innerHTML = `\n      <h1>${defName}'s File Tree Viewer</h1>\n    `\n    alert(\"I knew you would try this, nice try! Enjoy your new name :)\");\n  }\n  \n}\nsayGreeting();\nconsole.log(\"I knew you would check here too. Hey!\")\n\nconst Folder = (props) => {\n\n  const [ isOpen, setIsOpen ] = useState(true);\n  const { name, children } = props;\n  const direction = isOpen ? 'down' : 'right';\n\n  const handleClick = () => setIsOpen(!isOpen);\n\n  return <div className=\"container\">\n    <span onClick={handleClick}>\n      <i className=\"blue folder icon\"></i>\n      <i className={`caret ${direction} icon`}></i>\n      </span>\n    {name}\n      <div style={{ marginLeft: '18px' }}>\n        {isOpen ?  children : null }\n      </div>\n    </div>\n};\n\nconst File = (props) => {\n  const { name } = props;\n  const fileExtension = name.split('.')[1];\n  const fileIcons = {\n    mp4: 'headphones',\n    jpeg: 'file image',\n    png: 'file image outline',\n    app: 'terminal'\n  };\n\n  return <div>\n    <i className={`${fileIcons[fileExtension]} icon`}></i>\n    {name}\n    </div>\n};\n\nfunction App() {\n  return (\n    <div>\n      <Folder name=\"Desktop\">\n        <Folder name=\"Music\">\n          <File name=\"myfavtrack.mp4\" />\n          <File name =\"linkin_park_numb.mp4\" />\n          <File name =\"metallica_enter_sandman.mp4\" />\n        </Folder>\n        <Folder name=\"Photos\">\n          <File name=\"wedding_day1.jpeg\" />\n          <File name=\"mycake.png\" />\n        </Folder>\n      </Folder>\n\n      <Folder name=\"Applications\">\n        <File name=\"VSCode.app\"></File>\n        <File name=\"Photoshop.app\"></File>\n        <File name=\"Terminal.app\"></File>\n        <File name=\"TweetDeck.app\"></File>\n          <Folder name=\"Secret Programs\">\n            <File name=\"WiFi Hacker.app\">Hi</File>\n          </Folder>\n      </Folder>\n    </div>\n  )\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}